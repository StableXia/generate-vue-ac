/* Use this function only when you nest element in modifier parent */
@function BEM_getParent() {
  $selector: str-slice(inspect(&), 2, -2);
  $index: str-index($selector, '--') - 1;
  @return str-slice($selector, 0, $index);
}

/* $size could be 1, 2, 3, 4, 6, 8, 9, 12, 16, 24, which are according to Material Design */
@mixin normalized-shadow($size) {
  $shadow: 0 0 2px rgba(0,0,0,.14), 0 2px 2px rgba(0,0,0,.12), 0 1px 3px rgba(0,0,0,.2);
  @if $size == 2 {
    $shadow: 0 0 4px rgba(0,0,0,.14), 0 3px 4px rgba(0,0,0,.12), 0 1px 5px rgba(0,0,0,.2);
  } @else if $size == 3 {
    $shadow: 0 3px 3px rgba(0,0,0,.14), 0 3px 4px rgba(0,0,0,.12), 0 1px 8px rgba(0,0,0,.2);
  } @else if $size == 4 {
    $shadow: 0 2px 4px rgba(0,0,0,.14), 0 4px 5px rgba(0,0,0,.12), 0 1px 10px rgba(0,0,0,.2);
  } @else if $size == 6 {
    $shadow: 0 6px 10px rgba(0,0,0,.14), 0 1px 18px rgba(0,0,0,.12), 0 3px 5px rgba(0,0,0,.2);
  } @else if $size == 8 {
    $shadow: 0 8px 10px 1px rgba(0,0,0,.14), 0 3px 14px 3px rgba(0,0,0,.12), 0 4px 15px rgba(0,0,0,.2);
  } @else if $size == 9 {
    $shadow: 0 9px 12px 1px rgba(0,0,0,.14), 0 3px 16px 2px rgba(0,0,0,.12), 0 5px 6px rgba(0,0,0,.2);
  } @else if $size == 12 {
    $shadow: 0 12px 17px 2px rgba(0,0,0,.14), 0 5px 22px 4px rgba(0,0,0,.12), 0 7px 8px rgba(0,0,0,.2);
  } @else if $size == 16 {
    $shadow: 0 16px 24px 2px rgba(0,0,0,.14), 0 6px 30px 5px rgba(0,0,0,.12), 0 8px 10px rgba(0,0,0,.2);
  } @else if $size == 24 {
    $shadow: 0 24px 38px 3px rgba(0,0,0,.14), 0 9px 46px 8px rgba(0,0,0,.12), 0 11px 15px rgba(0,0,0,.2);
  }

  box-shadow: $shadow;
}

/* application global sizing */
$app-min-width: 1280px;
$app-nav-width: 200px;
$app-content-min-width: $app-min-width - $app-nav-width;
